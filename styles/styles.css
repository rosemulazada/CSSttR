*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    height: 100dvh;
}

/* custom properties */
:root {
    /* basic colors */
    --psp-foreground: #28282f;

    /* states */
    /* button: default */
    --button-shading: #000;

    /* text */
    --text-color: #fff;
}

@font-face {
    font-family: "Pixelify Sans";
    src: url("../assets/fonts/PixelifySans-VariableFont_wght.ttf")
        format("truetype");
}

body {
    min-height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: grey;
    font-family: "Pixelify Sans", sans-serif;
}

/*======================
 *      CODE START
 *======================*/

/* ! Apply one other requirement */
/* ! Create a FITTING title */
/* ! ASK SANNE FOR RESPONSIVE DESIGN */
/* TODO: also ask sanne about hover on z-index */

/* responsive */

body {
    > div {
        position: relative;

        /* !Dont forget to end up putting this in  the 'checked' thing so it only runs when the device is on*/
        /* TODO: on hover, change style query for background: possible switch the version of mario..? OR: use style queries for the 'pressed' effect.*/
        /* TODO: have mario come walking in from the left of the screen. */
        div[data-element="L"] {
            background: #ffffff6b;
            width: 6em;
            height: 2em;
            top: 0;
            left: 2.5em;
            position: absolute;
            border-top-left-radius: 100%;
            transition: 0.25s ease;

            &:hover {
                transform: translate(5px, 5px);
            }
        }

        div[data-element="R"] {
            background: #ffffff6b;
            width: 6em;
            height: 2em;
            top: 0;
            right: 2.5em;
            position: absolute;
            border-top-right-radius: 100%;
            transition: 0.25s ease;

            &:hover {
                transform: translate(-5px, 5px);
            }
        }

        > img[src="./assets/svgs/psp-foreground.svg"] {
            width: 100%;
            height: 100%;
        }

        /* div that holds the main grid */
        > div {
            width: 100%;
            height: 100%;
            position: absolute;
            display: grid;
            grid-template-columns: 0.355fr 1fr 0.355fr;
            grid-template-rows: 0.06897fr 0.03448fr 1fr 0.15fr 0.03448fr;

            /* d-pad */
            > div:first-child {
                grid-row-start: 3;
                grid-column-start: 1;
                grid-column-end: 1;

                /* grid for the D-PAD main element */
                display: grid;
                grid-template-columns: repeat(3, 1fr);
                grid-template-rows: 0.5fr 1fr 0.65fr;
            }

            /* the screen */
            /* TODO: add 'borders' styling for depth using box-shadow */
            > div:nth-child(2) {
                grid-row-start: 2;
                grid-row-end: 4;
                grid-column-start: 2;
                grid-column-end: 3;

                background: linear-gradient(
                    135deg,
                    rgba(255, 255, 255, 0.246) 0%,
                    black 25%,
                    rgba(255, 255, 255, 0.093) 50%,
                    black 75%,
                    rgba(255, 255, 255, 0.246) 100%
                );

                h1 {
                    color: transparent;
                    text-align: center;
                    font-size: clamp(0.75em, 2em, 2em);
                }
            }

            /* analog-side */
            > div:nth-child(3) {
                grid-row-start: 3;
                grid-column-start: 3;
                grid-column-end: 3;

                /* position analog side main elements */
                display: grid;
                grid-template-columns: repeat(3, 1fr);
                grid-template-rows: 0.5fr 1fr 0.65fr;
            }

            /* bottom bar */
            > div:last-child {
                grid-row-start: 4;
                grid-column-start: 2;
            }
        }
    }
}

/*======================
 *        D-PAD
 *======================*/
/* TODO: style the D-PAD */
body > div > div > div:first-child > div:nth-child(2) {
    grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 2;

    border: 1.5px solid black;
    border-radius: 100%;
    height: 100%;
    width: 70%;
    margin-inline: auto;
    grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 2;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);

    label {
        width: 100%;
        height: 100%;
    }

    label:first-child {
        grid-column-start: 2;
        grid-column-end: 3;
        grid-row-start: 1;
    }

    label:nth-child(2) {
        grid-column-start: 1;
        grid-column-end: 2;
        grid-row-start: 2;
        transform: rotate(270deg);
    }

    label:nth-child(3) {
        grid-column-start: 2;
        grid-column-end: 3;
        grid-row-start: 3;
        transform: rotate(180deg);
    }

    label:last-child {
        grid-column-start: 3;
        grid-column-end: 3;
        grid-row-start: 2;
        transform: rotate(90deg);
    }

    label::before {
        content: "△";
        color: white;
        display: inline-block;
        vertical-align: middle;
        /* TODO: make sure this width scales */
        width: 100%;
        height: 100%;
        text-align: center;
        /* source for button styling: https://stackoverflow.com/questions/38377062/how-to-make-html-button-look-pressed-in-using-css */
        background-color: var(--psp-foreground);
        clip-path: polygon(0 0, 100% 0%, 100% 75%, 50% 100%, 0 75%);
        outline: none;
        -webkit-box-shadow: inset 0px 0px 10px var(--button-shading);
        -moz-box-shadow: inset 0px 0px 10px var(--button-shading);
        box-shadow: inset 0px 0px 10px var(--button-shading);
    }
}

/*======================
 *        ANALOG
 *======================*/
label {
    position: relative;
    align-self: center;
    justify-self: center;
}
input,
label {
    cursor: pointer;
}

/* general styling for d-pad inputs and analog inputs */
body > div > div > div:nth-child(3) > div:nth-child(2) > label > input,
body > div > div > div:first-child > div:nth-child(2) > label > input {
    opacity: 0;
    position: absolute;
    top: 0.5em;
    left: 0.7em;
    transform: scale(1.8);
}

/* grid for the entire analog side */
body > div > div > div:nth-child(3) {
    > div:first-child {
        grid-column-start: 1;
        grid-column-end: 4;
        height: 100%;
        width: 100%;

        img {
            padding: 1em;
            width: 60%;
            opacity: 0.75;
        }
    }

    > div:nth-child(2) {
        /* circle around the analog-pad */
        border: 1.5px solid black;
        border-radius: 100%;
        margin-inline: auto;
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 2;

        /* TODO: fix buttons need to overlap circle, add padding to edges for this effect.*/
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(3, 1fr);

        label {
            &:before {
                color: white;
                display: inline-block;
                vertical-align: middle;
                /* TODO: make sure this width scales */
                width: 35px;
                height: 35px;
                text-align: center;
                border-radius: 100%;
                /* source for button styling: https://stackoverflow.com/questions/38377062/how-to-make-html-button-look-pressed-in-using-css */
                background-color: var(--psp-foreground);
                outline: none;
                -webkit-box-shadow: inset 0px 0px 5px var(--button-shading);
                -moz-box-shadow: inset 0px 0px 5px var(--button-shading);
                box-shadow: inset 0px 0px 5px var(--button-shading);
            }

            /* set icon */
            /* TODO: scale 'content' */
            /* TODO: make button appear pressed */
            &:first-child:before {
                content: "△";
                /* transform:scale(.5) ; */
            }

            &:nth-child(2):before {
                content: "□";
            }

            &:nth-child(3):before {
                content: "⨯";
            }

            &:last-child:before {
                content: "○";
            }

            /* position individual buttons */
            &:first-child {
                grid-column-start: 2;
                grid-column-end: 3;
                grid-row-start: 1;
            }

            &:nth-child(2) {
                grid-column-start: 1;
                grid-column-end: 2;
                grid-row-start: 2;
            }

            &:nth-child(3) {
                grid-column-start: 2;
                grid-column-end: 3;
                grid-row-start: 3;
            }

            &:last-child {
                grid-column-start: 3;
                grid-column-end: 3;
                grid-row-start: 2;
            }
        }
    }

    /* styling for the power/hold buttons */
    > div:last-child {
        height: 100%;
        width: 100%;

        /* grid for power/hold */
        display: grid;
        grid-template-rows: 0.35fr 1fr 1fr 0.35fr;
        grid-template-columns: 1.25fr 1fr 0.25fr;

        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 3;

        > label {
            font-family: Arial, sans-serif;
            display: block;
            text-transform: uppercase;
            font-size: 0.6em;
            color: var(--text-color);

            /* power button */
            &:first-of-type {
                align-self: start;
                grid-column-start: 2;
                grid-column-end: 3;
                grid-row-start: 2;
                grid-row-end: 3;
                width: 100%;
            }

            /* hold button */
            &:last-of-type {
                /* background: blue; */
                align-self: end;
                grid-column-start: 2;
                grid-column-end: 3;
                grid-row-start: 3;
                grid-row-end: 4;
                width: 100%;
            }

            /* some padding next to the label and the blur styling*/
            input {
                margin-left: 0.4em;
                filter: blur(2px);
                width: 1em;
                height: 1em;
                vertical-align: middle;
                background-color: white;
                border-radius: 100%;
                appearance: unset;
                -webkit-appearance: unset;
                cursor: pointer;
            }
        }
    }
}

/* functionality analog-side */
/* TODO: add styling for pressed button */
/* TODO: if power on checkbox checked, change screen styling: work with one element, no classes ofc.  */
body > div > div > div:nth-child(3) > div:last-child > label {
    width: max-content;
}
body > div > div > div:nth-child(3) > div:last-child > label > input {
    width: 5px;
    height: 5px;
}

/* press power on */
body > div > div > div:nth-child(3) > div:last-child > label > input:checked {
    background-color: rgb(0, 255, 0);
}

/* TODO: should toggle animation so it doesnt stay orange */
body
    > div
    > div
    > div:nth-child(3)
    > div:last-child:has(label:first-child > input:checked)
    label:last-child
    input {
    animation: hold 3s forwards;
}

/* TODO: time this with the screen coming  */
@keyframes hold {
    0% {
        background-color: white;
    }

    100% {
        background-color: rgb(255, 166, 0);
    }
}

/* turn screen on if powerbutton checked */
body:has(div:nth-child(3) div:nth-child(3) label:first-child > input:checked)
    div[data-element="screen"] {
    animation: screen 5s ease;
    background-image: url(../assets/images/super-mario-bros-3/background.png);

    h1 {
        animation: title 5s ease;
    }
}

body
    > div
    > div
    > div:nth-child(3)
    > div:last-child
    > label:last-child
    > input {
    background-color: white;
}

body
    > div
    > div
    > div:nth-child(3)
    > div:nth-child(2):has(input:checked)
    label:before {
    background-color: rebeccapurple;
}

/* TODO: The game itself. */
/* ! To avoid the game from being played while the device is off, nest all the code for it in the 'checked' command block. This will form a conditional statement. */

/* this is the condition for any of the animations to occur */

/* @container (width >= 703); */

/* h1 {
    animation: title 5s ease;
} */

/**======================
 *      ANIMATIONS
 *========================**/
@keyframes title {
    0% {
        color: transparent;
        text-shadow: none;
    }

    70% {
        color: white;
        text-shadow: 1px 1px 2px red, 0 0 1em blue, 0 0 0em blue;
    }

    80% {
        color: transparent;
        text-shadow: none;
    }

    90% {
        color: white;
        text-shadow: 1px 1px 2px red, 0 0 1em blue, 0 0 0em blue;
    }

    97% {
        color: transparent;
        text-shadow: none;
    }

    98% {
        text-shadow: 1px 1px 2px red, 0 0 1em blue, 0 0 0em blue;
        color: white;
    }

    99% {
        color: transparent;
        text-shadow: none;
    }

    100% {
        text-shadow: 1px 1px 2px red, 0 0 1em blue, 0 0 0em blue;
        color: white;
    }
}

@keyframes screen {
    0% {
        background: linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.246) 0%,
            black 25%,
            rgba(255, 255, 255, 0.093) 50%,
            black 75%,
            rgba(255, 255, 255, 0.246) 100%
        );
    }

    10% {
        background: linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.246) 0%,
            rgb(255, 255, 255) 25%,
            rgb(178, 178, 178) 50%,
            rgb(255, 255, 255) 75%,
            rgba(255, 255, 255, 0.246) 100%
        );
    }

    90% {
        background: linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.246) 0%,
            rgb(255, 255, 255) 25%,
            rgb(178, 178, 178) 50%,
            rgb(255, 255, 255) 75%,
            rgba(255, 255, 255, 0.246) 100%
        );
    }

    97% {
        background: linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.246) 0%,
            black 25%,
            rgba(255, 255, 255, 0.093) 50%,
            black 75%,
            rgba(255, 255, 255, 0.246) 100%
        );
    }

    98% {
        background: linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.246) 0%,
            rgb(255, 255, 255) 25%,
            rgb(178, 178, 178) 50%,
            rgb(255, 255, 255) 75%,
            rgba(255, 255, 255, 0.246) 100%
        );
    }

    100% {
        background: linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.246) 0%,
            black 25%,
            rgba(255, 255, 255, 0.093) 50%,
            black 75%,
            rgba(255, 255, 255, 0.246) 100%
        );
    }
}
