*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    height: 100dvh;
}

/* custom properties */
:root {
    /* basic colors */
    --psp-foreground: #28282f;

    /* states */
    /* button: default */
    --button-shading: #000;
}

body {
    min-height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

/*======================
 *      CODE START
 *======================*/

body > div {
    position: relative;
}

body > div > img[src="./assets/svgs/psp-foreground.svg"] {
    width: 100%;
    height: 100%;
}

/* div that holds the main grid */
body > div > div {
    width: 100%;
    height: 100%;
    position: absolute;
    display: grid;
    grid-template-columns: 0.2778fr 1fr 0.2778fr;
    grid-template-rows: 0.06897fr 0.03448fr 1fr 0.15fr 0.03448fr;
}

body > div > div > div:first-child {
    border: red 2px solid;
    grid-row-start: 3;
    grid-column-start: 1;
    grid-column-end: 1;
}

/* the screen */
/* TODO: add 'screen off' styling */
/* TODO: add 'borders' styling for depth using box-shadow */
body > div > div > div:nth-child(2) {
    /* border: blue 2px solid; */
    grid-row-start: 2;
    grid-row-end: 4;
    grid-column-start: 2;
    grid-column-end: 3;

    background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.246) 0%,
        black 25%,
        rgba(255, 255, 255, 0.093) 50%,
        black 75%,
        rgba(255, 255, 255, 0.246) 100%
    );
}

body > div > div > div:nth-child(3) {
    border: green 2px solid;
    grid-row-start: 3;
    grid-column-start: 3;
    grid-column-end: 3;
}

body > div > div > div:last-child {
    border: yellow 2px solid;
    grid-row-start: 4;
    grid-column-start: 2;
}

/* styling for inputs on the LEFT: D-PAD */
/* TODO: the above */

/* styling for inputs on the RIGHT: ANALOG */
label {
    position: relative;
}

input {
    opacity: 0;
    position: absolute;
    top: 7px;
    left: 7px;
    transform: scale(1.8);
}

input,
label {
    /* display: inline-block; */
    /* margin: 5px; */
    cursor: pointer;
}

body > div > div > div:nth-child(3) label:before {
    color: white;
    display: inline-block;
    vertical-align: middle;
    width: 30px;
    height: 30px;
    padding: 2px;
    margin-right: 10px;
    text-align: center;
    border-radius: 100%;
    /* source for button styling: https://stackoverflow.com/questions/38377062/how-to-make-html-button-look-pressed-in-using-css */
    background-color: var(--psp-foreground);
    outline: none;
    -webkit-box-shadow: inset 0px 0px 5px var(--button-shading);
    -moz-box-shadow: inset 0px 0px 5px var(--button-shading);
    box-shadow: inset 0px 0px 5px var(--button-shading);
}

/* set icon */
/* TODO: scale 'content' */
/* TODO: position buttons */
/* TODO: make button appear pressed */
/* ?: does the current default styling look more pressed..? */
body > div > div > div:nth-child(3) label:first-child:before {
    content: "△";
}

body > div > div > div:nth-child(3) label:nth-child(2):before {
    content: "□";
}

body > div > div > div:nth-child(3) label:nth-child(3):before {
    content: "⨯";
}

body > div > div > div:nth-child(3) label:last-child:before {
    content: "○";
}

/* functionality analog-side */
/* TODO: add styling for pressed button */
/* TODO: if power on checkbox checked, change screen styling: work with one element, no classes ofc.  */
/* body > div > div > div:nth-child(3):has(input:checked) label:before {
} */
